* covid-dashboard

Inspired by the excellent [[https://coronavirus.jhu.edu/map.html][COVID-19 Dashboard by the Center for Systems Science and Engineering (CSSE) at Johns Hopkins University]].

** Quick Start

#+begin_src sh
# local work
lein dev          # localhost:8280, hot-reload
lein garden auto  # styles + watcher

# release
lein prod         # output build -> resources/public/js/compiled/
#+end_src

** Dependencies

[[https://github.com/Day8/re-frame-template][Re-frame]] framework (which sits on [[https://github.com/reagent-project/reagent][Reagent]]) with [[https://github.com/noprompt/garden][garden]], [[https://github.com/Day8/re-com][re-com]], [[https://github.com/gadfly361/breaking-point][breaking-point]], [[https://github.com/clj-commons/secretary][secretary]], plus other niceties via [[https://github.com/Day8/re-frame-template][re-frame-template]]. [[https://github.com/d3/d3][D3]] visualizations.

** Layouts, Panels, Sub-panels

There are three layouts: mobile, tablet, and desktop. The app is constrained to 100% viewport height for all layouts.

Each layout has one or more panels. Each panel is made up of sub-panels. The types of sub-panels are:

- Viewer
- Switcher
- Detail
- Menu

The viewer is the container div that shows the displays (one at a time). There are three types of displays: tables, line charts, and maps. The switcher has left/right buttons to change the display currently shown in the viewer. Clicking on the center of the switcher brings up a menu of the displays in that panel.

*** Mobile

#+begin_src
+---+
|   |
| 1 |
|   |
+---+
#+end_src

The mobile layout has one panel. From top to bottom, this panel contains four sub-panels: Viewer, Detail, Menu, and Switcher. The detail sub-panel is toggled by map interactions, and the switcher menu is toggled by clicking on the switcher. Like Panel 3 for tablet/desktop, the mobile panel viewer fades when switching between displays.

*** Tablet

#+begin_src
+---+-----+---+
| 1 |     | 4 |
+---+     +---+
|   |  3  | 5 |
| 2 |     +---+
|   |     | 6 |
+---+-----+---+
#+end_src

The tablet layout has six panels, each with a viewer, a switcher, and a menu that is available by clicking on the switcher. Panel 3 is "special" because the viewer fades when switching between displays, and a detail sub-panel shows when clicking on a map display.

*** Desktop

#+begin_src
+---+---------+---+---+
| 1 |         |   |   |
+---+         | 4 | 5 |
|   |    3    |   |   |
| 2 |         +---+---+
|   |         |   6   |
+---+---------+-------+
#+end_src

The main difference between tablet layout and desktop layout is that 4 & 5 are vertical instead of horizontal. Panel 3 is the same between tablet and desktop.

** Data

The backend slices and serves the data the way that each sub-panel wants it. One big endpoint delivers it together, originating from the ~init~ fetch event:

#+begin_src clojure
(defn init []
  (routes/app-routes)
  (re-frame/dispatch [:call-api-all]) ;; <-- here
  (re-frame/dispatch-sync [::events/initialize-db])
  ;; ...
#+end_src

The API call (via [[https://github.com/Day8/re-frame-http-fx][re-frame-http-fx]]) responses are divvied out in the re-frame event ~::assoc-api-all~:

 #+begin_src clojure
(assoc db :confirmed-by-state confirmed-by-state
       :confirmed-by-country confirmed-by-country
       :confirmed-by-us-county confirmed-by-us-county
       ;; ...
 #+end_src

...and then declared via [[https://github.com/weavejester/hiccup][hiccup]] in the view. Example:

#+begin_src clojure
[:table [:tbody
         (map (fn [[value us-county country]]
                [:tr {:key (str us-county value)}
                 [:td.bold value]
                 [:td (str us-county ", " country)]])
              @confirmed-by-us-county)]]
#+end_src
